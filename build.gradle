buildscript {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0'
    }
}


plugins {
    id "org.jetbrains.intellij" version "0.4.8"
    id "org.jetbrains.grammarkit" version "2018.2.2"
    id "checkstyle"
}

checkstyle {
    toolVersion '8.20';
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'org.jetbrains.grammarkit'
apply plugin: 'java'


import com.github.benmanes.gradle.versions.updates.DependencyUpdatesTask
import org.jetbrains.grammarkit.tasks.*

allprojects {
    repositories {
        jcenter()
    }
}

intellij {
    // we support IC-2017.2, but PsiViewer is not available for the older version, therefore se IC-2018.1 to run it
    version 'IC-2018.1'
    pluginName 'asciidoctor'
    updateSinceUntilBuild false
    plugins = [
        'PsiViewer:2018.1.2', // used for debugging
        'PlantUML integration:2.12.1' // used to test highlighting of plantuml diagrams
    ]

//    publish {
//        pluginId '7910'
//        username publishUsername
//        password publishPassword
//    }

//     Uncomment to test against Android Studio
//    intellij.alternativeIdePath = '/Applications/Android Studio.app'
//    systemProperty 'idea.is.internal', 'false'
}


dependencies {
    compile 'org.asciidoctor:asciidoctorj-diagram:1.5.18'
    compile 'org.asciidoctor:asciidoctorj:2.0.0'
    compile 'commons-io:commons-io:2.4'
    compile 'nl.jworks.markdown_to_asciidoc:markdown_to_asciidoc:1.1'
    testCompile 'junit:junit:4.12'
}

def genRoot = file('gen')

sourceSets {
  main {
    java.srcDirs project.files(genRoot)
  }
}

grammarKit {
  // version of IntelliJ patched JFlex (see bintray link below), Default is 1.7.0-1
  jflexRelease = '1.7.0-1'

  // tag or short commit hash of Grammar-Kit to use (see link below). Default is 2017.1.6
  grammarKitRelease = '6452fde524'
}

task generateAsciidocLexer(type: GenerateLexer) {
  source = "src/main/java/org/asciidoc/intellij/lexer/asciidoc.flex"
  targetDir = "gen/org/asciidoc/intellij/lexer"
  targetClass = "_AsciiDocLexer"
  purgeOldFiles = true
}

compileJava {
  dependsOn generateAsciidocLexer
}

task checkUpdates(type: DependencyUpdatesTask) {
    description = "check denpendency updates"
    group = "check"
}
