package org.asciidoc.intellij.psi;

import com.intellij.openapi.project.Project;
import com.intellij.psi.search.GlobalSearchScope;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

public class AsciiDocFileUtil {

  public static List<AsciiDocSection> findSections(Project project, String key) {
    if (key.length() == 0) {
      return Collections.emptyList();
    }
    List<AsciiDocSection> result = null;
    final GlobalSearchScope scope = new AsciiDocSearchScope(project).restrictedByAsciiDocFileType();
    Collection<AsciiDocSection> asciiDocSections = new ArrayList<>();
    asciiDocSections.addAll(AsciiDocSectionKeyIndex.getInstance().get(key, project, scope));
    asciiDocSections.addAll(AsciiDocSectionKeyIndex.getInstance().get(AsciiDocSectionStubElementType.SECTION_WITH_VAR, project, scope));
    for (AsciiDocSection asciiDocSection : asciiDocSections) {
      if (key.equals(asciiDocSection.getTitle()) || (asciiDocSection.matchesAutogeneratedId(key) && asciiDocSection.getBlockId() == null)) {
        if (result == null) {
          result = new ArrayList<>();
        }
        result.add(asciiDocSection);
      }
    }
    return result != null ? result : Collections.emptyList();
  }

  public static List<AsciiDocSection> findSections(Project project) {
    List<AsciiDocSection> result = new ArrayList<>();
    Collection<String> keys = AsciiDocSectionKeyIndex.getInstance().getAllKeys(project);
    final GlobalSearchScope scope = new AsciiDocSearchScope(project).restrictedByAsciiDocFileType();
    for (String key : keys) {
      Collection<AsciiDocSection> asciiDocSections = AsciiDocSectionKeyIndex.getInstance().get(key, project, scope);
      for (AsciiDocSection asciiDocSection : asciiDocSections) {
        result.add(asciiDocSection);
      }
    }
    return result;
  }
}
